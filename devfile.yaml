schemaVersion: 2.2.0
# METADATA
metadata:
  name: workspace-${PROJECT_NAME}-${UTILIZADOR}
  namespace: thalles-costa-dev
  version: 0.0.1
  tags:
    - Java
    - Maven
  projectType: Maven
  language: Java

# PROJECTS
starterProjects:
- name: poc-hello-world
  git:
    remotes:
      origin: https://github.com/thallesdc/poc-workspace-project.git

# COMPONENTS
components:
  - name: tools
    container:
      image: registry.access.redhat.com/ubi9/openjdk-17:1.17-1.1705573248
      command:
        - tail
        - '-f'
        - /dev/null
      memoryLimit: 512Mi
      mountSources: true
      endpoints:
        - name: https-maven
          targetPort: 8181
          protocol: https
        - exposure: none
          name: debug
          targetPort: 9009
      volumeMounts:
        - name: m2
          path: /home/user/.m2
      env:
        - name: DEBUG_PORT
          value: '9009'

  - name: ubi-minimal
    container:
      image: registry.access.redhat.com/ubi8/ubi-minimal
      command: ['tail']
      args: ['-f', '/dev/null']
      memoryLimit: 64M
      mountSources: true
      
  - name: m2
    volume: {}

  # - name: java
  #   container:
  #     image: centos:7
  #     memoryLimit: 2Gi
  #     mountSources: true
  #     # endpoints:
  #     #   - name: glassfish
  #     #     targetPort: 8080
  #     # volumes:
  #     #   - name: m2
  #     #     containerPath: /home/user/.m2

  # - name: glassfish
  #   container:
  #     image: che-jboss/glassfish:latest
  #     # memoryLimit: 2Gi
  #     mountSources: true
  #     command:
  #       - bash
  #       - -c
  #       - |
  #         cp -r /projects /opt/payara5/glassfish/domains/domain1/autodeploy/
  #         ./bin/asadmin start-domain --verbose
  #     endpoints:
  #       - name: web
  #         targetPort: 8181
  #         exposure: public
        
  #       - name: debug
  #         targetPort: 9009
  #         exposure: public

# COMMANDS
commands:
  - id: package
    exec:
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: mvn -Dmaven.repo.local=/home/user/.m2/repository package
      group:
        kind: build
        isDefault: true
  - id: compile
    exec:
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: mvn clean install -U
      group:
        kind: build
        isDefault: true
  - id: run
    exec:
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: java -jar target/*.jar
      group:
        kind: run
        isDefault: true
  - id: debug
    exec:
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: java -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=${DEBUG_PORT},suspend=n -jar target/*.jar
      group:
        kind: debug
        isDefault: true
  - id: buildimage
    exec:
      label: "Build Image"
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: "podman build -f docker/Dockerfile -t image-registry.openshift-image-registry.svc:5000/openshift/quarkus-api-example ."
      group:
        kind: build
  # - id: loginlocalregistry
  #   exec:
  #     label: "Login to local OpenShift registry"
  #     component: tools
  #     workingDir: ${PROJECT_SOURCE}
  #     commandLine: "podman login --tls-verify=false -u kubeadmin -p $(oc whoami -t) image-registry.openshift-image-registry.svc:5000"
  #     group:
  #       kind: run
  # - id: pushimage
  #   exec:
  #     label: "Push Image"
  #     component: tools
  #     workingDir: ${PROJECT_SOURCE}
  #     commandLine: "podman push --tls-verify=false image-registry.openshift-image-registry.svc:5000/openshift/quarkus-api-example"
  #     group:
  #       kind: build
  # - id: startdev
  #   exec:
  #     label: "Start Development mode (Hot reload + debug)"
  #     component: tools
  #     workingDir: ${PROJECT_SOURCE}
  #     commandLine: "./mvnw compile quarkus:dev"
  #     group:
  #       kind: run
  #       isDefault: true

  # - id: startnative
  #   exec:
  #     label: "Start Native"
  #     component: ubi-minimal
  #     workingDir: ${PROJECT_SOURCE}/target
  #     commandLine: "./quarkus-api-example-1.0.0-SNAPSHOT-runner"
  #     group:
  #       kind: run
#   - id: build
#     exec:
#       component: java
#       commandLine: mvn clean install
#   - id: run
#     exec:
#       component: glassfish
#       commandLine: ./bin/asadmin start-domain --verbose